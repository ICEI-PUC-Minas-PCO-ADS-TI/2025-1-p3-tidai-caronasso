// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using caronasso.Data;

#nullable disable

namespace caronasso.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250519022541_AddressNullable")]
    partial class AddressNullable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("caronasso.Models.Carona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Destino")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HorarioSaida")
                        .HasColumnType("datetime2");

                    b.Property<int>("MotoristaId")
                        .HasColumnType("int");

                    b.Property<string>("Origem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VagasDisponiveis")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MotoristaId");

                    b.ToTable("Caronas");
                });

            modelBuilder.Entity("caronasso.Models.CaronaPassageiro", b =>
                {
                    b.Property<int>("CaronaId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("CaronaId", "UsuarioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("CaronaPassageiros");
                });

            modelBuilder.Entity("caronasso.Models.Chat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Conteudo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HorarioEnvio")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("caronasso.Models.ChatParticipante", b =>
                {
                    b.Property<int>("ChatId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("ChatId", "UsuarioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("ChatParticipantes");
                });

            modelBuilder.Entity("caronasso.Models.Mensagem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChatId")
                        .HasColumnType("int");

                    b.Property<string>("Conteudo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HorarioEnvio")
                        .HasColumnType("datetime2");

                    b.Property<int>("RemetenteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.HasIndex("RemetenteId");

                    b.ToTable("Mensagens");
                });

            modelBuilder.Entity("caronasso.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Curso")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Disponivel")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FotoPerfil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Genero")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Perfil")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("caronasso.Models.Carona", b =>
                {
                    b.HasOne("caronasso.Models.Usuario", "Motorista")
                        .WithMany("CaronasComoMotorista")
                        .HasForeignKey("MotoristaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Motorista");
                });

            modelBuilder.Entity("caronasso.Models.CaronaPassageiro", b =>
                {
                    b.HasOne("caronasso.Models.Carona", "Carona")
                        .WithMany("Passageiros")
                        .HasForeignKey("CaronaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("caronasso.Models.Usuario", "Usuario")
                        .WithMany("CaronasComoPassageiro")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Carona");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("caronasso.Models.ChatParticipante", b =>
                {
                    b.HasOne("caronasso.Models.Chat", "Chat")
                        .WithMany("Participantes")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("caronasso.Models.Usuario", "Usuario")
                        .WithMany("Chats")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chat");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("caronasso.Models.Mensagem", b =>
                {
                    b.HasOne("caronasso.Models.Chat", "Chat")
                        .WithMany("Mensagens")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("caronasso.Models.Usuario", "Remetente")
                        .WithMany("MensagensEnviadas")
                        .HasForeignKey("RemetenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chat");

                    b.Navigation("Remetente");
                });

            modelBuilder.Entity("caronasso.Models.Carona", b =>
                {
                    b.Navigation("Passageiros");
                });

            modelBuilder.Entity("caronasso.Models.Chat", b =>
                {
                    b.Navigation("Mensagens");

                    b.Navigation("Participantes");
                });

            modelBuilder.Entity("caronasso.Models.Usuario", b =>
                {
                    b.Navigation("CaronasComoMotorista");

                    b.Navigation("CaronasComoPassageiro");

                    b.Navigation("Chats");

                    b.Navigation("MensagensEnviadas");
                });
#pragma warning restore 612, 618
        }
    }
}
